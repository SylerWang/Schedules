PINTERP(1)                                                          PINTERP(1)



NNAAMMEE
       pinterp - interpolate/extrapolate view from pictures

SSYYNNOOPPSSIISS
       ppiinntteerrpp  [  view options ][ --tt tthhrreesshhoolldd ][ --zz zzoouutt ][ --ff _t_y_p_e ][ --BB ][
       --aa||qq ][ --ee eexxppoossuurree ][ --nn ] ppiiccttffiillee zzssppeecc ....

DDEESSCCRRIIPPTTIIOONN
       _P_i_n_t_e_r_p interpolates or extrapolates a new view from one or more  RADI-
       ANCE  pictures  and sends the result to the standard output.  The input
       picture files must contain correct view specifications,  as  maintained
       by  _r_p_i_c_t_(_1_)_, _r_v_u_(_1_)_, _p_f_i_l_t_(_1_) and _p_i_n_t_e_r_p_.  Specifically, _p_i_n_t_e_r_p will
       not work on pictures processed by _p_c_o_m_p_o_s_(_1_) or _p_c_o_m_b_(_1_)_.   Each  input
       file must be accompanied by a z specification, which gives the distance
       to each pixel in the image.  If  _z_s_p_e_c  is  an  existing  file,  it  is
       assumed  to contain a short floating point number for each pixel, writ-
       ten in scanline order.  This file is usually generated by the _-_z option
       of _r_p_i_c_t_(_1_)_.  If _z_s_p_e_c is a positive number rather than a file, it will
       be used as a constant value for the corresponding image.  This  may  be
       useful  for  certain transformations on "flat" images or when the view-
       point remains constant.

       The _-_n option specifies that input and output z distances are along the
       view  direction, rather than absolute distances to intersection points.
       This option is usually appropriate with a constant z specification, and
       should not be used with _r_p_i_c_t_(_1_) z files.

       The  _-_z  option writes out interpolated z values to the specified file.
       Normally, this information is thrown away.

       _P_i_n_t_e_r_p rearranges the pixels from the input pictures to produce a rea-
       sonable  estimate  of  the desired view.  Pixels that map within the _-_t
       threshold of each other (.02 times the z distance by default) are  con-
       sidered  coincident.   With  the  _-_a option, image points that coincide
       will be averaged together, giving a smooth result.  The _-_q option turns
       averaging  off,  which  means  that  the first mapped pixel for a given
       point will be used.  This makes the program run faster  and  take  less
       memory,  but  at the expense of image quality.  By default, two or more
       pictures are averaged together, and a single picture  is  treated  with
       the  faster  algorithm.  This may be undesirable when a quick result is
       desired from multiple input pictures in the first  case,  or  a  single
       picture is being reduced in size (anti-aliased) in the second case.

       Portions  which  were  hidden  or missing in the input pictures must be
       "filled in" somehow, and a number of methods are  provided  by  the  _-_f
       option.   The  default  value  for this option is _-_f_a_, which results in
       both foreground and background filling.  The foreground fill  algorithm
       spreads each input pixel to cover all output pixels within a parallelo-
       gram corresponding to that pixel's projection in the new view.  Without
       it,  each  input  pixel  contributes  to at most one output pixel.  The
       background algorithm fills in those areas in  the  final  picture  that
       have  not  been filled with foreground pixels.  It does this by looking
       at the boundary surrounding each blank area and  picking  the  farthest
       pixels  to  each  side,  assuming  that this will make a suitable back-
       ground.  The _-_f_f option tells the program to use  only  the  foreground
       fill,  the _-_f_b option says use only background fill, and the _-_f_0 option
       says not to use either fill algorithm.

       Even when both fill algorithms  are  used,  there  may  still  be  some
       unfilled  pixels.   By  default,  these  pixels  are  painted black and
       assigned a z distance of zero.  The _-_f_c option can be  used  to  change
       the  color  used for unfilled pixels, and the _-_f_z option can be used to
       set the z distance (always along the view  direction).   Alternatively,
       the  _-_f_r  option  can  be used to compute these pixels using _r_t_r_a_c_e_(_1_)_.
       The argument to this option is a quoted string containing arguments for
       _r_t_r_a_c_e_.   It  must  contain  the octree used to generate the input pic-
       tures, along with any other options necessary to match the  calculation
       used  for  the  input  pictures.  The _-_f_s option can be used to place a
       limit on the distance (in pixels) over which the background fill  algo-
       rithm is used.  The default value for this option is 0, which is inter-
       preted as no limit.  A value of 1 is equivalent to  turning  background
       fill  off.   When combined with the _-_f_r option, this is roughly equiva-
       lent to the _-_p_s option of _r_p_i_c_t_(_1_)_.

       In order of increasing quality and cost, one can  use  the  _-_f_a  option
       alone,  or the _-_f_r option paired with _-_f_s or _-_f_f or _-_f_0_.  The last com-
       bination will result in the recalculation of all pixels not  adequately
       accounted  for  in the input pictures, with an associated computational
       expense.  It is rare that the _-_f_s option results in  appreciable  image
       degradation,  so it is usually the second combination that is used when
       the background fill algorithm results in objectionable artifacts.

       The _-_B option may be used to average multiple views read from the stan-
       dard  input  into a single, blurred output picture.  This is similar to
       running _p_i_n_t_e_r_p multiple times and averaging the output together with a
       program  like  _p_c_o_m_b_(_1_)_.   This  option is useful for simulating motion
       blur and depth of  field.   (See  _p_m_d_b_l_u_r_(_1_)_._)   The  input  views  are
       reported  in  the information header of the output file, along with the
       averaged view.  The picture dimensions computed  from  the  first  view
       will  be  the ones used, regardless whether or not the subsequent views
       agree.  (The reported pixel aspect ratio in the  output  is  determined
       from  these  original dimensions and the averaged view.)  Note that the
       expense of the _-_f_r option is proportional to the number of  views  com-
       puted,  and  the  _-_z  output file will be the z-buffer of the last view
       interpolated rather than an averaged distance map.

       In general, _p_i_n_t_e_r_p performs well when the output view  is  flanked  by
       two nearby input views, such as might occur in a walk-through animation
       sequence.  The algorithms start to break down when  there  is  a  large
       difference between the view desired and the view(s) provided.  Specifi-
       cally, obscured objects may appear to have  holes  in  them  and  large
       areas at the image borders may not be filled by the foreground or back-
       ground algorithms.  Also, specular reflections and highlights will  not
       be  interpolated  very well, since their view-dependent appearance will
       be incompletely compensated for by the program.  (The _-_a option  offers
       some benefit in this area.)

       The _-_e option may be used to adjust the output image exposure, with the
       same specification given as for _p_f_i_l_t_.  The actual adjustment  will  be
       rounded to the nearest integer f-stop if the _-_q option is in effect (or
       there is only a single input picture).

EEXXAAMMPPLLEE
       To interpolate two frames of a walk-through  animation,  anti-alias  to
       512x400 and increase the exposure by 2.5 f-stops:

         pinterp  -vf 27.vf -a -x 512 -y 400 -e +2.5 30.hdr 30.z 20.hdr 20.z >
         27.hdr

       To extrapolate a second eyepoint for  a  stereo  pair  and  recalculate
       background regions:

         pinterp -vf right.vf -ff -fr "-av .1 .1 .1 scene.oct" left.hdr left.z
         > right.hdr

       To convert an angular fisheye to a hemispherical fisheye:

         pinterp -vf fish.hdr -vth -ff fish.hdr 1 > hemi.hdr

AAUUTTHHOORR
       Greg Ward

SSEEEE AALLSSOO
       getinfo(1), pdfblur(1), pfilt(1), pmblur(1), pmdblur(1), rpict(1), ran-
       imate(1), rtrace(1), rvu(1)



RADIANCE                            1/24/96                         PINTERP(1)
