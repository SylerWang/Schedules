OCONV(1)                                                              OCONV(1)



NNAAMMEE
       oconv - create an octree from a RADIANCE scene description

SSYYNNOOPPSSIISS
       ooccoonnvv [ --ii ooccttrreeee | --bb xxmmiinn yymmiinn zzmmiinn ssiizzee ][ --nn oobbjjlliimm ][ --rr mmaaxxrreess ][
       --ff ][ --ww ][ - ] [ iinnppuutt ....  ]

DDEESSCCRRIIPPTTIIOONN
       _O_c_o_n_v adds each scene description _i_n_p_u_t to _o_c_t_r_e_e and sends the  result
       to  the  standard  output.   Each _i_n_p_u_t can be either a file name, or a
       command (enclosed in quotes and preceded by  a  `!').   Similarly,  the
       octree  input  may  be given as a command preceded by a `!'.  If any of
       the surfaces will not fit in _o_c_t_r_e_e_, an error message  is  printed  and
       the  program aborts.  If no _o_c_t_r_e_e is given, a new one is created large
       enough for all of the surfaces.

       The _-_b option allows the user to give a bounding cube  for  the  scene,
       starting  at _x_m_i_n _y_m_i_n _z_m_i_n and having a side length _s_i_z_e_.  If the cube
       does not contain all of the surfaces, an error results.  The _-_b and  _-_i
       options are mutually exclusive.

       The  _-_n  option  specifies the maximum surface set size for each voxel.
       Larger numbers result in quicker  octree  generation,  but  potentially
       slower rendering.  Smaller values may or may not produce faster render-
       ings, since the default number (6) is close to optimal for most scenes.

       The  _-_r option specifies the maximum octree resolution.  This should be
       greater than or equal to the ratio of the largest and  smallest  dimen-
       sions  in  the  scene  (ie. surface size or distance between surfaces).
       The default is 16384.

       The _-_f option produces a frozen octree containing all the scene  infor-
       mation.  Normally, only a reference to the scene files is stored in the
       octree, and changes to those files  may  invalidate  the  result.   The
       freeze  option  is  useful when the octree file's integrity and loading
       speed is more important than its size, or when  the  octree  is  to  be
       relocated  to  another directory, and is especially useful for creating
       library objects for the "instance" primitive type.  If the input octree
       is frozen, the output will be also.

       The _-_w option suppresses warnings.

       A  hyphen by itself ('-') tells _o_c_o_n_v to read scene data from its stan-
       dard input.  This also implies the _-_f option.

       The only scene file changes that do not require octree regeneration are
       modifications  to non-surface parameters.  If the coordinates of a sur-
       face are changed, or any primitives are added or deleted, oconv must be
       run  again.   Programs will abort with a "stale octree" message if they
       detect any dangerous inconsistencies between the octree and  the  input
       files.

       Although  the  octree file format is binary, it is meant to be portable
       between machines.  The only limitation is that machines with  radically
       different  integer sizes will not work together.  For the best results,
       the -f option should be used if an octree is to be  used  in  different
       environments.

DDIIAAGGNNOOSSTTIICCSS
       There are four basic error types reported by oconv:

              warning - a non-fatal input-related error

              fatal - an unrecoverable input-related error

              system - a system-related error

              internal - a fatal error related to program limitations

              consistency - a program-caused error

       Most  errors  are  self-explanatory.   However,  the following internal
       errors should be mentioned:

       Too many scene files
              Reduce the number of scene files  by  combining  them  or  using
              calls to xform(1) within files to create a hierarchy.

       Set overflow in addobject (id)
              This error occurs when too many surfaces are close together in a
              scene.  Either too many surfaces are lying right on top of  each
              other, or the bounding cube is inflated from an oversized object
              or an improper _-_b specification.  If hundreds of triangles  come
              together at a common vertex, it may not be possible to create an
              octree from the object.  This happens most often when inane  CAD
              systems create spheres using a polar tessellation.  Chances are,
              the surface "id" is near one of those causing the problem.

       Hash table overflow in fullnode
              This error is caused by too many surfaces.  If it is possible to
              create  an  octree for the scene at all, it will have to be done
              in stages using the _-_i option.

EEXXAAMMPPLLEE
       To  add  book1,  book2  and  a  transformed   book3   to   the   octree
       ``scene.oct'':

         oconv -i scene.oct book1 book2 '\!xform -rz 30 book3' > newscene.oct

AAUUTTHHOORR
       Greg Ward

NNOOTTEESS
       In  the octree, the names of the scene files are stored rather than the
       scene information.  This means that a  new  octree  must  be  generated
       whenever  the  scene  files are changed or moved.  Also, an octree that
       has been moved to a new directory will not be able to find scene  files
       with  relative  pathnames.   The  freeze  option avoids these problems.
       _m_a_k_e_(_1_) or _r_a_d_(_1_) can be used to automate octree creation  and  mainte-
       nance.

SSEEEE AALLSSOO
       getbbox(1), getinfo(1), make(1), obj2mesh(1), rad(1), rpict(1), rvu(1),
       rtrace(1), xform(1)



RADIANCE                            8/15/95                           OCONV(1)
