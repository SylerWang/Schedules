RPICT(1)                                                              RPICT(1)



NNAAMMEE
       rpict - generate a RADIANCE picture

SSYYNNOOPPSSIISS
       rrppiicctt [ ooppttiioonnss ] [ $$EEVVAARR ] [ @@ffiillee ] [ ooccttrreeee ]
       rrppiicctt [[ ooppttiioonnss ]] --ddeeffaauullttss

DDEESSCCRRIIPPTTIIOONN
       _R_p_i_c_t  generates  a picture from the RADIANCE scene given in _o_c_t_r_e_e and
       sends it to the standard output.  If no _o_c_t_r_e_e is given,  the  standard
       input  is  read.   (The octree may also be specified as the output of a
       command enclosed in quotes and preceded by a `!'.)  Options specify the
       viewing parameters as well as giving some control over the calculation.
       Options may be given on the command line and/or read from the  environ-
       ment and/or read from a file.  A command argument beginning with a dol-
       lar sign ('$') is immediately replaced by the  contents  of  the  given
       environment  variable.   A  command  argument beginning with an at sign
       ('@') is immediately replaced by the contents of the given file.

       In the second form shown above, the  default  values  for  the  options
       (modified  by  those options present) are printed with a brief explana-
       tion.

       Most options are followed by one or more arguments, which must be sepa-
       rated from the option and each other by white space.  The exceptions to
       this rule are the _-_v_t option and the boolean  options.   Normally,  the
       appearance  of  a boolean option causes a feature to be "toggled", that
       is switched from off to on or on  to  off  depending  on  its  previous
       state.   Boolean  options  may also be set explicitly by following them
       immediately with a '+' or '-', meaning on or off,  respectively.   Syn-
       onyms  for  '+' are any of the characters "yYtT1", and synonyms for '-'
       are any of the characters "nNfF0".  All other characters will  generate
       an error.

       --vvtt_t      Set  view  type  to  _t_.   If  _t is 'v', a perspective view is
                 selected.  If _t is 'l', a parallel view is used.  A cylindri-
                 cal  panorma  may be selected by setting _t to the letter 'c'.
                 This view is like a standard perspective vertically, but pro-
                 jected  on  a  cylinder  horizontally  (like  a soupcan's-eye
                 view).  Three fisheye views are provided as well; 'h'  yields
                 a  hemispherical fisheye view, 'a' results in angular fisheye
                 distortion, and 's' results in a planisphere  (stereographic)
                 projection.   A  hemispherical fisheye is a projection of the
                 hemisphere onto a circle.  The maximum view  angle  for  this
                 type is 180 degrees.  An angular fisheye view is defined such
                 that distance from the center of the image is proportional to
                 the  angle from the central view direction.  An angular fish-
                 eye can display a full 360 degrees.   A  planisphere  fisheye
                 view  maintains  angular  relationships between lines, and is
                 commonly used for sun path analysis.  This is  more  commonly
                 known  as a "stereographic projection," but we avoid the term
                 here so as not to confuse it with  a  stereoscopic  pair.   A
                 planisphere fisheye can display up to (but not including) 360
                 degrees, although distortion becomes extreme as this limit is
                 approached.   Note  that  there  is no space between the view
                 type option and its single letter argument.

       --vvpp _x _y _z Set the view point to _x _y _z _.  This is the focal point  of  a
                 perspective view or the center of a parallel projection.

       --vvdd _x_d _y_d _z_d
                 Set  the  view  direction vector to _x_d _y_d _z_d _.  The length of
                 this vector indicates the focal distance as needed by the _-_p_d
                 option, described below.

       --vvuu _x_d _y_d _z_d
                 Set the view up vector (vertical direction) to _x_d _y_d _z_d _.

       --vvhh _v_a_l   Set  the view horizontal size to _v_a_l_.  For a perspective pro-
                 jection (including fisheye  views),  _v_a_l  is  the  horizontal
                 field  of  view (in degrees).  For a parallel projection, _v_a_l
                 is the view width in world coordinates.

       --vvvv _v_a_l   Set the view vertical size to _v_a_l_.

       --vvoo _v_a_l   Set the view fore clipping plane at a distance  of  _v_a_l  from
                 the  view point.  The plane will be perpendicular to the view
                 direction for perspective and parallel view types.  For fish-
                 eye  view  types,  the  clipping plane is actually a clipping
                 sphere, centered on the view point with radius _v_a_l_.   Objects
                 in front of this imaginary surface will not be visible.  This
                 may be useful for seeing through walls (to get a longer  per-
                 spective from an exterior view point) or for incremental ren-
                 dering.  A value of zero implies no foreground  clipping.   A
                 negative  value  produces  some interesting effects, since it
                 creates an inverted image for objects behind  the  viewpoint.
                 This  possibility  is provided mostly for the purpose of ren-
                 dering stereographic holograms.

       --vvaa _v_a_l   Set the view aft clipping plane at a distance of _v_a_l from the
                 view point.  Like the view fore plane, it will be perpendicu-
                 lar to the view direction for perspective and  parallel  view
                 types.   For  fisheye view types, the clipping plane is actu-
                 ally a clipping sphere,  centered  on  the  view  point  with
                 radius  _v_a_l_.   Objects behind this imaginary surface will not
                 be visible.  A value of zero means no aft  clipping,  and  is
                 the  only  way  to see infinitely distant objects such as the
                 sky.

       --vvss _v_a_l   Set the view shift to _v_a_l_.  This is  the  amount  the  actual
                 image  will  be  shifted  to the right of the specified view.
                 This is option is useful for generating  skewed  perspectives
                 or  rendering an image a piece at a time.  A value of 1 means
                 that the rendered image starts just to the right of the  nor-
                 mal  view.   A  value  of -1 would be to the left.  Larger or
                 fractional values are permitted as well.

       --vvll _v_a_l   Set the view lift to _v_a_l_.  This  is  the  amount  the  actual
                 image  will  be lifted up from the specified view, similar to
                 the _-_v_s option.

       --vvff _f_i_l_e  Get view parameters from _f_i_l_e_, which may be a  picture  or  a
                 file created by rvu (with the "view" command).

       --xx _r_e_s    Set the maximum x resolution to _r_e_s_.

       --yy _r_e_s    Set the maximum y resolution to _r_e_s_.

       --ppaa _r_a_t   Set  the  pixel  aspect  ratio  (height  over  width) to _r_a_t_.
                 Either the x or the y resolution will be reduced so that  the
                 pixels  have  this  ratio  for the specified view.  If _r_a_t is
                 zero, then the x and y resolutions will adhere to  the  given
                 maxima.

       --ppss _s_i_z_e  Set the pixel sample spacing to the integer _s_i_z_e_.  This spec-
                 ifies the sample spacing (in pixels) for adaptive subdivision
                 on the image plane.

       --pptt _f_r_a_c  Set  the pixel sample tolerance to _f_r_a_c_.  If two samples dif-
                 fer by more than this amount, a third sample is taken between
                 them.

       --ppjj _f_r_a_c  Set the pixel sample jitter to _f_r_a_c_.  Distributed ray-tracing
                 performs anti-aliasing by randomly sampling over  pixels.   A
                 value  of one will randomly distribute samples over full pix-
                 els.  A value of zero samples pixel centers  only.   A  value
                 between  zero  and  one  is  usually  best for low-resolution
                 images.

       --ppmm _f_r_a_c  Set the pixel motion blur to _f_r_a_c_.  In an animated  sequence,
                 the  exact view will be blurred between the previous view and
                 the next view as though a shutter were open this fraction  of
                 a   frame  time.   (See  the  _-_S  option  regarding  animated
                 sequences.)  The first view will be blurred according to  the
                 difference  between  the initial view set on the command line
                 and the first view taken from the standard input.  It is  not
                 advisable   to  use  this  option  in  combination  with  the
                 _p_m_b_l_u_r_(_1_) program, since one takes the place  of  the  other.
                 However,  it  may  improve  results with _p_m_b_l_u_r to use a very
                 small fraction with the _-_p_m option,  to  avoid  the  ghosting
                 effect of too few time samples.

       --ppdd _d_i_a   Set  the  pixel  depth-of-field aperture to a diameter of _d_i_a
                 (in world coordinates).  This will  be  used  in  conjunction
                 with  the view focal distance, indicated by the length of the
                 view direction vector given in the _-_v_d  option.   It  is  not
                 advisable  to  use  this  option in combination with the _p_d_f_-
                 _b_l_u_r_(_1_) program, since one takes  the  place  of  the  other.
                 However,  it  may  improve results with _p_d_f_b_l_u_r to use a very
                 small fraction with the _-_p_d option,  to  avoid  the  ghosting
                 effect of too few samples.

       --ddjj _f_r_a_c  Set  the  direct  jittering to _f_r_a_c_.  A value of zero samples
                 each source at specific sample points  (see  the  _-_d_s  option
                 below),  giving a smoother but somewhat less accurate render-
                 ing.  A positive value causes rays  to  be  distributed  over
                 each  source  sample according to its size, resulting in more
                 accurate penumbras.  This option should never be greater than
                 1,  and  may  even  cause problems (such as speckle) when the
                 value is smaller.  A warning about aiming failure will issued
                 if  _f_r_a_c  is too large.  It is usually wise to turn off image
                 sampling when using direct jitter by setting -ps to 1.

       --ddss _f_r_a_c  Set the direct sampling ratio to _f_r_a_c_.  A light  source  will
                 be  subdivided until the width of each sample area divided by
                 the distance to the illuminated point is  below  this  ratio.
                 This  assures accuracy in regions close to large area sources
                 at a slight computational expense.  A  value  of  zero  turns
                 source  subdivision  off,  sending  at most one shadow ray to
                 each light source.

       --ddtt _f_r_a_c  Set the direct threshold to _f_r_a_c_.  Shadow testing  will  stop
                 when  the  potential contribution of at least the next and at
                 most all remaining light source samples  is  less  than  this
                 fraction  of  the  accumulated  value.   (See  the _-_d_c option
                 below.)  The remaining light source contributions are approx-
                 imated  statistically.   A value of zero means that all light
                 source samples will be tested for shadow.

       --ddcc _f_r_a_c  Set the direct certainty to _f_r_a_c_.  A value of one  guarantees
                 that  the absolute accuracy of the direct calculation will be
                 equal to or better than that given in the _-_d_t  specification.
                 A  value of zero only insures that all shadow lines resulting
                 in a contrast change greater than the _-_d_t specification  will
                 be calculated.

       --ddrr _N     Set the number of relays for secondary sources to _N_.  A value
                 of 0 means that secondary sources will be ignored.   A  value
                 of  1  means  that sources will be made into first generation
                 secondary sources; a value of 2 means that  first  generation
                 secondary  sources  will  also be made into second generation
                 secondary sources, and so on.

       --ddpp _D     Set the secondary source presampling density to D.   This  is
                 the  number  of  samples  per  steradian that will be used to
                 determine ahead of time whether or not it is worth  following
                 shadow  rays through all the reflections and/or transmissions
                 associated with a secondary source path.  A value of 0  means
                 that the full secondary source path will always be tested for
                 shadows if it is tested at all.

       --ddvv       Boolean switch for light source visibility.  With this switch
                 off, sources will be black when viewed directly although they
                 will still  participate  in  the  direct  calculation.   This
                 option  may be desirable in conjunction with the _-_i option so
                 that light sources do not appear in the output.

       --ssjj _f_r_a_c  Set the specular sampling jitter to _f_r_a_c_.  This is the degree
                 to  which the highlights are sampled for rough specular mate-
                 rials.  A value of one means  that  all  highlights  will  be
                 fully sampled using distributed ray tracing.  A value of zero
                 means that no jittering will take place, and all  reflections
                 will appear sharp even when they should be diffuse.  This may
                 be desirable when used in  combination  with  image  sampling
                 (see _-_p_s option above) to obtain faster renderings.

       --sstt _f_r_a_c  Set  the  specular  sampling  threshold to _f_r_a_c_.  This is the
                 minimum fraction of reflection or transmission,  under  which
                 no  specular  sampling  is  performed.  A value of zero means
                 that highlights will always be sampled by  tracing  reflected
                 or transmitted rays.  A value of one means that specular sam-
                 pling is never used.   Highlights  from  light  sources  will
                 always  be  correct, but reflections from other surfaces will
                 be approximated using an ambient value.  A sampling threshold
                 between  zero and one offers a compromise between image accu-
                 racy and rendering time.

       --bbvv       Boolean switch for back face visibility.   With  this  switch
                 off,  back  faces  of opaque objects will be invisible to all
                 rays.  This is dangerous unless  the  model  was  constructed
                 such that all surface normals on opaque objects face outward.
                 Although turning off back face visibility does not save  much
                 computation  time  under most circumstances, it may be useful
                 as a tool for scene debugging, or  for  seeing  through  one-
                 sided  walls  from the outside.  This option has no effect on
                 transparent or translucent materials.

       --aavv _r_e_d _g_r_n _b_l_u
                 Set the ambient value to a radiance of _r_e_d _g_r_n _b_l_u _.  This is
                 the  final  value used in place of an indirect light calcula-
                 tion.  If the number of ambient bounces is one or greater and
                 the ambient value weight is non-zero (see _-_a_w and _-_a_b below),
                 this value may be modified by the computed indirect values to
                 improve overall accuracy.

       --aaww _N     Set  the  relative weight of the ambient value given with the
                 _-_a_v option to _N_.  As new indirect irradiances  are  computed,
                 they  will modify the default ambient value in a moving aver-
                 age, with the specified weight assigned to the initial  value
                 given  on  the  command and all other weights set to 1.  If a
                 value of 0 is given with this option, then the initial  ambi-
                 ent  value  is  never modified.  This is the safest value for
                 scenes with large differences in indirect contributions, such
                 as when both indoor and outdoor (daylight) areas are visible.

       --aabb _N     Set the number of ambient bounces to _N_.  This is the  maximum
                 number  of  diffuse bounces computed by the indirect calcula-
                 tion.  A value of zero implies no indirect calculation.

       --aarr _r_e_s   Set the ambient resolution to _r_e_s_.  This number  will  deter-
                 mine the maximum density of ambient values used in interpola-
                 tion.  Error will start to increase on surfaces spaced closer
                 than  the  scene size divided by the ambient resolution.  The
                 maximum ambient value density is the  scene  size  times  the
                 ambient  accuracy  (see  the _-_a_a option below) divided by the
                 ambient resolution.  The scene size can be  determined  using
                 _g_e_t_i_n_f_o_(_1_)  with  the _-_d option on the input octree.  A value
                 of zero is interpreted as unlimited resolution.

       --aaaa _a_c_c   Set the ambient accuracy to _a_c_c_.  This  value  will  approxi-
                 mately  equal  the error from indirect illuminance interpola-
                 tion.  A value of zero implies no interpolation.

       --aadd _N     Set the number of ambient divisions to _N_.  The error  in  the
                 Monte  Carlo  calculation  of  indirect  illuminance  will be
                 inversely proportional to the square root of this number.   A
                 value of zero implies no indirect calculation.

       --aass _N     Set  the number of ambient super-samples to _N_.  Super-samples
                 are applied only to the ambient divisions which show  a  sig-
                 nificant change.

       --aaff _f_n_a_m_e Set  the ambient file to _f_n_a_m_e_.  This is where indirect illu-
                 minance will be stored  and  retrieved.   Normally,  indirect
                 illuminance  values are kept in memory and lost when the pro-
                 gram finishes or dies.  By using a  file,  different  invoca-
                 tions can share illuminance values, saving time in the compu-
                 tation.  Also, by creating an ambient file during a low reso-
                 lution  rendering, better results can be obtained in a second
                 high resolution pass.  The ambient file is in a machine-inde-
                 pendent  binary format which may be examined with _l_o_o_k_a_m_b_(_1_)_.

                 The ambient file may also be used as a means of communication
                 and  data sharing between simultaneously executing processes.
                 The same file may be used  by  multiple  processes,  possibly
                 running  on different machines and accessing the file via the
                 network (ie.  _n_f_s_(_4_)_)_.  The network lock manager _l_o_c_k_d_(_8_)  is
                 used to insure that this information is used consistently.

                 If  any  calculation  parameters  are changed or the scene is
                 modified, the old ambient file should be removed so that  the
                 calculation  can  start  over from scratch.  For convenience,
                 the original ambient parameters are listed in the  header  of
                 the  ambient  file.  _G_e_t_i_n_f_o_(_1_) may be used to print out this
                 information.

       --aaee _m_o_d   Append _m_o_d to the ambient exclude list, so that it  will  not
                 be  considered  during  the  indirect calculation.  This is a
                 hack for speeding the indirect computation by  ignoring  cer-
                 tain objects.  Any object having _m_o_d as its modifier will get
                 the default ambient level rather  than  a  calculated  value.
                 Any  number of excluded modifiers may be given, but each must
                 appear in a separate option.

       --aaii _m_o_d   Add _m_o_d to the ambient include list, so that it will be  con-
                 sidered during the indirect calculation.  The program can use
                 either an include list or an exclude list, but not both.

       --aaEE _f_i_l_e  Same as _-_a_e_, except read modifiers to be excluded from  _f_i_l_e_.
                 The RAYPATH environment variable determines which directories
                 are searched for this file.  The modifier names are separated
                 by white space in the file.

       --aaII _f_i_l_e  Same  as _-_a_i_, except read modifiers to be included from _f_i_l_e_.

       --mmee _r_e_x_t _g_e_x_t _b_e_x_t
                 Set the global medium extinction coefficient to the indicated
                 color,  in  units  of  1/distance  (distance in world coordi-
                 nates).  Light will be scattered or  absorbed  over  distance
                 according  to  this  value.  The ratio of scattering to total
                 scattering plus absorption is set by  the  albedo  parameter,
                 described below.

       --mmaa _r_a_l_b _g_a_l_b _b_a_l_b
                 Set the global medium albedo to the given value between 0 0 0
                 and 1 1 1.  A zero value means that all light not transmitted
                 by  the  medium  is absorbed.  A unitary value means that all
                 light not transmitted by the medium is scattered in some  new
                 direction.   The  isotropy of scattering is determined by the
                 Heyney-Greenstein parameter, described below.

       --mmgg _g_e_c_c  Set the medium Heyney-Greenstein  eccentricity  parameter  to
                 _g_e_c_c_.   This  parameter  determines  how  strongly scattering
                 favors the forward direction.  A value of  0  indicates  per-
                 fectly isotropic scattering.  As this parameter approaches 1,
                 scattering tends to prefer the forward direction.

       --mmss _s_a_m_p_d_i_s_t
                 Set the medium sampling distance to _s_a_m_p_d_i_s_t_, in world  coor-
                 dinate  units.   During  source  scattering, this will be the
                 average distance between adjacent  samples.   A  value  of  0
                 means  that  only  one  sample will be taken per light source
                 within a given scattering volume.

       --ii        Boolean switch to compute  irradiance  rather  than  radiance
                 values.   This  only affects the final result, substituting a
                 Lambertian surface and multiplying the radiance by pi.  Glass
                 and other transparent surfaces are ignored during this stage.
                 Light sources still appear with their original radiance  val-
                 ues,  though  the  _-_d_v option (above) may be used to override
                 this.

       --uu        Boolean switch to control uncorrelated random sampling.  When
                 "off",  a  low-discrepancy  sequence  is  used, which reduces
                 variance but can result in a brushed appearance  in  specular
                 highlights.   When "on", pure Monte Carlo sampling is used in
                 all calculations.

       --llrr _N     Limit reflections to a maximum of _N_, if N is a positive inte-
                 ger.   If  _N  is  zero, then Russian roulette is used for ray
                 termination, and the _-_l_w setting (below)  must  be  positive.
                 If N is a negative integer, then this sets the upper limit of
                 reflections past which Russian roulette  will  be  used.   In
                 scenes with dielectrics and total internal reflection, a set-
                 ting of 0 (no limit) may cause a stack overflow.

       --llww _f_r_a_c  Limit the weight of each ray to a minimum  of  _f_r_a_c_.   During
                 ray-tracing,  a  record is kept of the estimated contribution
                 (weight) a ray would have in the image.  If  this  weight  is
                 less  than  the specified minimum and the _-_l_r setting (above)
                 is positive, the  ray  is  not  traced.   Otherwise,  Russian
                 roulette is used to continue rays with a probability equal to
                 the ray weight divided by the given _f_r_a_c_.

       --SS _s_e_q_s_t_a_r_t
                 Instead of generating a single picture based only on the view
                 parameters  given  on  the  command  line, this option causes
                 _r_p_i_c_t to read view options from the standard  input  and  for
                 each  line  containing a valid view specification, generate a
                 corresponding picture.  This option is most useful for gener-
                 ating  animated sequences, though it may also be used to con-
                 trol rpict from a remote process for network-distributed ren-
                 dering.   _S_e_q_s_t_a_r_t is a positive integer that will be associ-
                 ated with the first output frame, and incremented for succes-
                 sive  output  frames.  By default, each frame is concatenated
                 to the output stream, but  it  is  possible  to  change  this
                 action  using  the  _-_o  option  (described  below).  Multiple
                 frames  may  be  later  extracted  from  the   output   using
                 _r_a___r_g_b_e_(_1_)_.

                 Note  that the octree may not be read from the standard input
                 when using this option.

       --oo _f_s_p_e_c  Send the picture(s) to the file(s) given by _f_s_p_e_c instead  of
                 the  standard  output.  If this option is used in combination
                 with _-_S and _f_s_p_e_c contains an  integer  field  for  _p_r_i_n_t_f_(_3_)
                 (eg.  "%03d")  then  the actual output file name will include
                 the current frame number.  _R_p_i_c_t will  not  allow  a  picture
                 file  to  be clobbered (overwritten) with this option.  If an
                 image in a sequence already exists _(_-_S  option),  _r_p_i_c_t  will
                 skip  until  it  reaches an image that doesn't, or the end of
                 the sequence.  This is useful for running rpict  on  multiple
                 machines  or  processors to render the same sequence, as each
                 process will skip to the next frame that needs rendering.

       --rr _f_n     Recover pixel information from the file _f_n_.  If  the  program
                 gets killed during picture generation, the information may be
                 recovered using this option.  The view parameters and picture
                 dimensions are also recovered from _f_n if possible.  The other
                 options should be identical to those which created _f_n_, or  an
                 inconsistent  picture  may result.  If _f_n is identical to the
                 file specification given  with  the  _-_o  option,  _r_p_i_c_t  will
                 rename  the file prior to copying its contents.  This insures
                 that the old file is not overwritten accidentally.  (See also
                 the _-_r_o option, below.)

                 If  _f_n is an integer and the recover option is used in combi-
                 nation with the _-_S option, then _r_p_i_c_t skips a number of  view
                 specifications  on  its input equal to the difference between
                 _f_n and _s_e_q_s_t_a_r_t_.  _R_p_i_c_t then performs a recovery operation on
                 the  file constructed from the frame number _f_n and the output
                 file specification given with the _-_o option.  This provides a
                 convenient  mechanism  for  recovering  in  the  middle of an
                 aborted picture sequence.

                 The recovered file will be removed if the operation  is  suc-
                 cessful.  If the recover operation fails (due to lack of disk
                 space) and the output file and  recover  file  specifications
                 are  the same, then the original information may be left in a
                 renamed temporary file.  (See FILES section, below.)

       --rroo _f_s_p_e_c This option causes pixel information to be recovered from and
                 subsequently  returned to the picture file _f_s_p_e_c_.  The effect
                 is the same as specifying identical recover and  output  file
                 names with the _-_r and _-_o options.

       --zz _f_s_p_e_c  Write  pixel distances out to the file _f_s_p_e_c_.  The values are
                 written as short floats, one per pixel in scanline order,  as
                 required by _p_i_n_t_e_r_p_(_1_)_.  Similar to the _-_o option, the actual
                 file name will be constructed using _p_r_i_n_t_f and the frame num-
                 ber  from the _-_S option.  If used with the _-_r option, _-_z also
                 recovers information from an aborted rendering.

       --PP _p_f_i_l_e  Execute in a persistent mode,  using  _p_f_i_l_e  as  the  control
                 file.   This  option  must  be  used together with _-_S_, and is
                 incompatible with the recover option _(_-_r_)_.  Persistent execu-
                 tion  means  that  after  reaching  end-of-file on its input,
                 _r_p_i_c_t will fork a child process that will  wait  for  another
                 _r_p_i_c_t command with the same _-_P option to attach to it.  (Note
                 that since the rest of the command line options will be those
                 of  the  original invocation, it is not necessary to give any
                 arguments besides _-_P  for  subsequent  calls.)   Killing  the
                 process  is  achieved with the _k_i_l_l_(_1_) command.  (The process
                 ID in the first line of _p_f_i_l_e may be  used  to  identify  the
                 waiting  _r_p_i_c_t process.)  This option may be less useful than
                 the _-_P_P variation, explained below.

       --PPPP _p_f_i_l_e Execute in continuous-forking persistent mode, using _p_f_i_l_e as
                 the control file.  The difference between this option and the
                 _-_P option described above is the creation of multiple  dupli-
                 cate  processes  to handle any number of attaches.  This pro-
                 vides a simple and reliable mechanism of  memory  sharing  on
                 most multiprocessing platforms, since the _f_o_r_k_(_2_) system call
                 will share memory on a copy-on-write basis.  This option  may
                 be  used  with _r_p_i_e_c_e_(_1_) to efficiently render a single image
                 using multiple processors on the same host.

       --tt _s_e_c    Set the time between progress reports  to  _s_e_c_.   A  progress
                 report  writes the number of rays traced, the percentage com-
                 pleted, and the CPU usage to the standard error.  Reports are
                 given  either  automatically after the specified interval, or
                 when the process receives  a  continue  (-CONT)  signal  (see
                 _k_i_l_l_(_1_)_)_.  A value of zero turns automatic reporting off.

       --ee _e_f_i_l_e  Send  error messages and progress reports to _e_f_i_l_e instead of
                 the standard error.

       --ww        Boolean switch for warning messages.  The default is to print
                 warnings,  so  the first appearance of this option turns them
                 off.

EEXXAAMMPPLLEE
       rpict -vp 10 5 3 -vd 1 -.5 0 scene.oct > scene.hdr

       rpict -S 1 -o frame%02d.hdr scene.oct < keyframes.vf

EENNVVIIRROONNMMEENNTT
       RAYPATH        the directories to check for auxiliary files.

FFIILLEESS
       /tmp/rtXXXXXX       common header information for picture sequence
       rfXXXXXX       temporary name for recover file

DDIIAAGGNNOOSSTTIICCSS
       If the program terminates from an input related error, the exit  status
       will  be 1.  A system related error results in an exit status of 2.  If
       the program receives a signal that is caught, it will exit with a  sta-
       tus  of 3.  In each case, an error message will be printed to the stan-
       dard error, or to the file designated by the _-_e option.

AAUUTTHHOORR
       Greg Ward

SSEEEE AALLSSOO
       getinfo(1), lookamb(1),  oconv(1),  pdfblur(1),  pfilt(1),  pinterp(1),
       pmblur(1), printf(3), ra_rgbe(1), rad(1), rtrace(1), rvu(1)



RADIANCE                            2/26/99                           RPICT(1)
